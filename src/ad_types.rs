//! UUIDs for the ad types module.

// This file is auto-generated by the update_uuids application.
// Based on https://bitbucket.org/bluetooth-SIG/public.git
// Commit hash: 8c192a8effd1574d0c83e72ad91407511bcad209

/// Bluetooth Flags Common Data Type.
///
/// `0x01`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.3.
pub const FLAGS: u8 = 0x1;

/// Bluetooth Incomplete List of 16-bit Service or Service Class UUIDs Common Data Type.
///
/// `0x02`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.1.
pub const INCOMPLETE_LIST_OF_16_BIT_SERVICE_OR_SERVICE_CLASS_UUIDS: u8 = 0x2;

/// Bluetooth Complete List of 16-bit Service or Service Class UUIDs Common Data Type.
///
/// `0x03`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.1.
pub const COMPLETE_LIST_OF_16_BIT_SERVICE_OR_SERVICE_CLASS_UUIDS: u8 = 0x3;

/// Bluetooth Incomplete List of 32-bit Service or Service Class UUIDs Common Data Type.
///
/// `0x04`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.1.
pub const INCOMPLETE_LIST_OF_32_BIT_SERVICE_OR_SERVICE_CLASS_UUIDS: u8 = 0x4;

/// Bluetooth Complete List of 32-bit Service or Service Class UUIDs Common Data Type.
///
/// `0x05`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.1.
pub const COMPLETE_LIST_OF_32_BIT_SERVICE_OR_SERVICE_CLASS_UUIDS: u8 = 0x5;

/// Bluetooth Incomplete List of 128-bit Service or Service Class UUIDs Common Data Type.
///
/// `0x06`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.1.
pub const INCOMPLETE_LIST_OF_128_BIT_SERVICE_OR_SERVICE_CLASS_UUIDS: u8 = 0x6;

/// Bluetooth Complete List of 128-bit Service or Service Class UUIDs Common Data Type.
///
/// `0x07`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.1.
pub const COMPLETE_LIST_OF_128_BIT_SERVICE_OR_SERVICE_CLASS_UUIDS: u8 = 0x7;

/// Bluetooth Shortened Local Name Common Data Type.
///
/// `0x08`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.2.
pub const SHORTENED_LOCAL_NAME: u8 = 0x8;

/// Bluetooth Complete Local Name Common Data Type.
///
/// `0x09`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.2.
pub const COMPLETE_LOCAL_NAME: u8 = 0x9;

/// Bluetooth Tx Power Level Common Data Type.
///
/// `0x0a`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.5.
pub const TX_POWER_LEVEL: u8 = 0xa;

/// Bluetooth Class of Device Common Data Type.
///
/// `0x0d`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.6.
pub const CLASS_OF_DEVICE: u8 = 0xd;

/// Bluetooth Simple Pairing Hash C-192 Common Data Type.
///
/// `0x0e`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.6.
pub const SIMPLE_PAIRING_HASH_C_192: u8 = 0xe;

/// Bluetooth Simple Pairing Randomizer R-192 Common Data Type.
///
/// `0x0f`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.6.
pub const SIMPLE_PAIRING_RANDOMIZER_R_192: u8 = 0xf;

/// Bluetooth Device ID Common Data Type.
///
/// `0x10`
/// See Bluetooth Device ID Profile (when used in EIR data).
pub const DEVICE_ID: u8 = 0x10;

/// Bluetooth Security Manager TK Value Common Data Type.
///
/// `0x10`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.8 (when used in OOB data blocks).
pub const SECURITY_MANAGER_TK_VALUE: u8 = 0x10;

/// Bluetooth Security Manager Out of Band Flags Common Data Type.
///
/// `0x11`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.7.
pub const SECURITY_MANAGER_OUT_OF_BAND_FLAGS: u8 = 0x11;

/// Bluetooth Peripheral Connection Interval Range Common Data Type.
///
/// `0x12`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.9.
pub const PERIPHERAL_CONNECTION_INTERVAL_RANGE: u8 = 0x12;

/// Bluetooth List of 16-bit Service Solicitation UUIDs Common Data Type.
///
/// `0x14`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.10.
pub const LIST_OF_16_BIT_SERVICE_SOLICITATION_UUIDS: u8 = 0x14;

/// Bluetooth List of 128-bit Service Solicitation UUIDs Common Data Type.
///
/// `0x15`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.10.
pub const LIST_OF_128_BIT_SERVICE_SOLICITATION_UUIDS: u8 = 0x15;

/// Bluetooth Service Data - 16-bit UUID Common Data Type.
///
/// `0x16`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.11.
pub const SERVICE_DATA_16_BIT_UUID: u8 = 0x16;

/// Bluetooth Public Target Address Common Data Type.
///
/// `0x17`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.13.
pub const PUBLIC_TARGET_ADDRESS: u8 = 0x17;

/// Bluetooth Random Target Address Common Data Type.
///
/// `0x18`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.14.
pub const RANDOM_TARGET_ADDRESS: u8 = 0x18;

/// Bluetooth Appearance Common Data Type.
///
/// `0x19`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.12.
pub const APPEARANCE: u8 = 0x19;

/// Bluetooth Advertising Interval Common Data Type.
///
/// `0x1a`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.15.
pub const ADVERTISING_INTERVAL: u8 = 0x1a;

/// Bluetooth LE Bluetooth Device Address Common Data Type.
///
/// `0x1b`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.16.
pub const LE_BLUETOOTH_DEVICE_ADDRESS: u8 = 0x1b;

/// Bluetooth LE Role Common Data Type.
///
/// `0x1c`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.17.
pub const LE_ROLE: u8 = 0x1c;

/// Bluetooth Simple Pairing Hash C-256 Common Data Type.
///
/// `0x1d`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.6.
pub const SIMPLE_PAIRING_HASH_C_256: u8 = 0x1d;

/// Bluetooth Simple Pairing Randomizer R-256 Common Data Type.
///
/// `0x1e`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.6.
pub const SIMPLE_PAIRING_RANDOMIZER_R_256: u8 = 0x1e;

/// Bluetooth List of 32-bit Service Solicitation UUIDs Common Data Type.
///
/// `0x1f`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.10.
pub const LIST_OF_32_BIT_SERVICE_SOLICITATION_UUIDS: u8 = 0x1f;

/// Bluetooth Service Data - 32-bit UUID Common Data Type.
///
/// `0x20`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.11.
pub const SERVICE_DATA_32_BIT_UUID: u8 = 0x20;

/// Bluetooth Service Data - 128-bit UUID Common Data Type.
///
/// `0x21`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.11.
pub const SERVICE_DATA_128_BIT_UUID: u8 = 0x21;

/// Bluetooth LE Secure Connections Confirmation Value Common Data Type.
///
/// `0x22`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.6.
pub const LE_SECURE_CONNECTIONS_CONFIRMATION_VALUE: u8 = 0x22;

/// Bluetooth LE Secure Connections Random Value Common Data Type.
///
/// `0x23`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.6.
pub const LE_SECURE_CONNECTIONS_RANDOM_VALUE: u8 = 0x23;

/// Bluetooth URI Common Data Type.
///
/// `0x24`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.18.
pub const URI: u8 = 0x24;

/// Bluetooth Indoor Positioning Common Data Type.
///
/// `0x25`
/// See Bluetooth Indoor Positioning Service.
pub const INDOOR_POSITIONING: u8 = 0x25;

/// Bluetooth Transport Discovery Data Common Data Type.
///
/// `0x26`
/// See Bluetooth Transport Discovery Service.
pub const TRANSPORT_DISCOVERY_DATA: u8 = 0x26;

/// Bluetooth LE Supported Features Common Data Type.
///
/// `0x27`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.19.
pub const LE_SUPPORTED_FEATURES: u8 = 0x27;

/// Bluetooth Channel Map Update Indication Common Data Type.
///
/// `0x28`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.20.
pub const CHANNEL_MAP_UPDATE_INDICATION: u8 = 0x28;

/// Bluetooth PB-ADV Common Data Type.
///
/// `0x29`
/// See Bluetooth Mesh Profile Specification, Section 5.2.1.
pub const PB_ADV: u8 = 0x29;

/// Bluetooth Mesh Message Common Data Type.
///
/// `0x2a`
/// See Bluetooth Mesh Profile Specification, Section 3.3.1.
pub const MESH_MESSAGE: u8 = 0x2a;

/// Bluetooth Mesh Beacon Common Data Type.
///
/// `0x2b`
/// See Bluetooth Mesh Profile Specification, Section 3.9.
pub const MESH_BEACON: u8 = 0x2b;

/// Bluetooth BIGInfo Common Data Type.
///
/// `0x2c`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.21.
pub const BIG_INFO: u8 = 0x2c;

/// Bluetooth Broadcast_Code Common Data Type.
///
/// `0x2d`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.22.
pub const BROADCAST_CODE: u8 = 0x2d;

/// Bluetooth Resolvable Set Identifier Common Data Type.
///
/// `0x2e`
/// See Bluetooth Coordinated Set Identification Profile v1.0 or later.
pub const RESOLVABLE_SET_IDENTIFIER: u8 = 0x2e;

/// Bluetooth Advertising Interval - long Common Data Type.
///
/// `0x2f`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.15.
pub const ADVERTISING_INTERVAL_LONG: u8 = 0x2f;

/// Bluetooth Broadcast_Name Common Data Type.
///
/// `0x30`
/// See Bluetooth Public Broadcast Profile v1.0 or later.
pub const BROADCAST_NAME: u8 = 0x30;

/// Bluetooth Encrypted Advertising Data Common Data Type.
///
/// `0x31`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.23.
pub const ENCRYPTED_ADVERTISING_DATA: u8 = 0x31;

/// Bluetooth Periodic Advertising Response Timing Information Common Data Type.
///
/// `0x32`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.24.
pub const PERIODIC_ADVERTISING_RESPONSE_TIMING_INFORMATION: u8 = 0x32;

/// Bluetooth Electronic Shelf Label Common Data Type.
///
/// `0x34`
/// See Bluetooth ESL Profile.
pub const ELECTRONIC_SHELF_LABEL: u8 = 0x34;

/// Bluetooth 3D Information Data Common Data Type.
///
/// `0x3d`
/// See Bluetooth 3D Synchronization Profile.
pub const _3D_INFORMATION_DATA: u8 = 0x3d;

/// Bluetooth Manufacturer Specific Data Common Data Type.
///
/// `0xff`
/// See Bluetooth Core Specification Supplement, Part A, Section 1.4.
pub const MANUFACTURER_SPECIFIC_DATA: u8 = 0xff;
